{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText_PetDataFlow",
						"type": "DatasetReference"
					},
					"name": "FileSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable_Pet_Dataflow",
						"type": "DatasetReference"
					},
					"name": "PetSinkSnowflake"
				}
			],
			"transformations": [
				{
					"name": "TransposeColumns"
				},
				{
					"name": "PickRequiredColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Job_ID as string (\"10\")",
				"}",
				"source(output(",
				"          {License Issue Date} as string,",
				"          {License Number} as string,",
				"          {Animal's Name} as string,",
				"          Species as string,",
				"          {Primary Breed} as string,",
				"          {Secondary Breed} as string,",
				"          {ZIP Code} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> FileSource",
				"FileSource derive(License_Issue_Date = toDate({License Issue Date}, 'MMMMM dd yyyy','en-US'),",
				"          Secondary_Breed = iifNull({Secondary Breed}, 'Unknown'),",
				"          ZIP_Code = lpad(toString({ZIP Code}), 5,'0'),",
				"          Species = upper(Species),",
				"          License_Number = toInteger(translate({License Number},'S','')),",
				"          {Animal's_Name} = translate({Animal's Name}, '()[]',''),",
				"          Job_ID = $Job_ID,",
				"          Job_Dt = currentDate()) ~> TransposeColumns",
				"TransposeColumns select(mapColumn(",
				"          Species,",
				"          {Primary Breed},",
				"          Secondary_Breed,",
				"          ZIP_Code,",
				"          {Animal's_Name},",
				"          Job_ID,",
				"          Job_Dt",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> PickRequiredColumns",
				"PickRequiredColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LICENSE_ISSUE_DATE as string,",
				"          LICENSE_NUMBER as string,",
				"          ANIMAL_NAME as string,",
				"          SPECIES as string,",
				"          PRIMARY_BREED as string,",
				"          SECONDARY_BREED as string,",
				"          ZIP_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> PetSinkSnowflake"
			]
		}
	}
}